/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly.com.ui;

import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;
import poly.com.dao.SanPhamDAO;
import poly.com.modal.SanPham;
import poly.com.utils.Auth;
import poly.com.utils.XDate;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.Timer;
import poly.com.dao.HoaDonDAO;
import poly.com.dao.KhachHangDAO;
import poly.com.modal.HoaDon;
import poly.com.modal.KhacHangTT;
import poly.com.utils.MsgBox;
import net.sf.jasperreports.view.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import poly.com.utils.XConvert;
import poly.com.utils.XJdbc;

/**
 *
 * @author nhatt
 */
public class ThemHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form ThemHoaDon
     */
    int row = -1;
    public static XJdbc conn;
    public ThemHoaDon(java.awt.Frame parent, boolean modal) {
        initComponents();
        init();
        conn = new XJdbc();
        this.setOclock();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDateNL = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtKHTT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnChonKHTT = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHDCT = new javax.swing.JTable();
        btnChonSP = new javax.swing.JButton();
        txtTongCong = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTien = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtKhuyenMai = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtVAT = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnQuetMaSP = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        lblTimer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hoá đơn");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(253, 252, 152));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setFocusable(false);
        jPanel2.setRequestFocusEnabled(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ĐƠN HÀNG", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ngày lập:  ");

        jDateNL.setDateFormatString("dd/MM/yyyy");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Mã hóa đơn: ");

        txtMaHD.setEditable(false);
        txtMaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Phục vụ bởi:");

        txtNhanVien.setEditable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi chú", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mã KHTT:");

        btnChonKHTT.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnChonKHTT.setForeground(new java.awt.Color(51, 102, 255));
        btnChonKHTT.setText("Chọn KHTT");
        btnChonKHTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonKHTTActionPerformed(evt);
            }
        });

        tblHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Mã SP", "Tên sản phẩm", "Đơn giá", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHDCT.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblHDCTComponentAdded(evt);
            }
        });
        tblHDCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblHDCTKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tblHDCT);

        btnChonSP.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnChonSP.setForeground(new java.awt.Color(192, 26, 48));
        btnChonSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Add to basket.png"))); // NOI18N
        btnChonSP.setText("CHỌN SẢN PHẨM");
        btnChonSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonSPActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Tổng cộng:");

        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("VNĐ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("- Tiền:");

        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("VNĐ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("- Khuyến mãi :");

        jLabel10.setForeground(new java.awt.Color(0, 0, 255));
        jLabel10.setText("VNĐ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("- VAT:");

        jLabel12.setForeground(new java.awt.Color(0, 0, 255));
        jLabel12.setText("%");

        btnThanhToan.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(0, 204, 51));
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Coins.png"))); // NOI18N
        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("THÀNH TIỀN BẰNG CHỮ");

        btnQuetMaSP.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnQuetMaSP.setForeground(new java.awt.Color(0, 153, 153));
        btnQuetMaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Fax.png"))); // NOI18N
        btnQuetMaSP.setText("QUÉT MÃ VẠCH SP");
        btnQuetMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuetMaSPActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Mã SP:");

        txtMaSP.setEditable(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Tên SP:");

        txtTenSP.setEditable(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Số lượng:");

        txtSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSLKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Đơn giá:");

        txtDonGia.setEditable(false);

        btnXoa.setBackground(new java.awt.Color(255, 153, 153));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 0));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Notes.png"))); // NOI18N
        btnXoa.setText("Xoá chi tiết");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(0, 153, 51));
        btnCapNhat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Trash.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật chi tiết");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/poly/com/image/icon/Alarm.png"))); // NOI18N
        jLabel18.setText("Thời gian:");

        lblTimer.setText("Thời gian thực");
        lblTimer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(25, 25, 25)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtTien, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtVAT, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel12)))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtKHTT, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnChonKHTT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNhanVien)
                                            .addComponent(jDateNL, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnChonSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtMaSP, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                                .addComponent(txtSL))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGap(22, 22, 22)
                                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(0, 0, Short.MAX_VALUE)))
                                    .addGap(8, 8, 8)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnQuetMaSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(170, 170, 170)
                                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblTimer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnChonSP)
                    .addComponent(btnQuetMaSP))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDateNL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKHTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonKHTT)
                    .addComponent(btnXoa)
                    .addComponent(btnCapNhat))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtVAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChonSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonSPActionPerformed
        chooseProduct();

    }//GEN-LAST:event_btnChonSPActionPerformed

    private void btnQuetMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuetMaSPActionPerformed
        ScanProduct();
        btnQuetMaSP.setEnabled(false);
    }//GEN-LAST:event_btnQuetMaSPActionPerformed

    private void txtSLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyReleased
        int soLuong = 1;
        try {
            soLuong = Integer.parseInt(txtSL.getText());
        } catch (Exception e) {
            MsgBox.alert(this, "Vui lòng nhập số ");
        }

        tien += donGia * soLuong;
        if (Double.parseDouble(txtTien.getText()) > 300000) {
            khuyenMai = (tien * 5) / 100;
        }
        tongCong = (tien - khuyenMai);
        txtTien.setText(tien + "");
        txtTongCong.setText(tongCong + "");
        txtKhuyenMai.setText(khuyenMai + "");

        //Change value
        thanhhTien = donGia * soLuong;
        row = tblHDCT.getSelectedRow();
        tblHDCT.setValueAt(soLuong, this.row, 3);
        tblHDCT.setValueAt(thanhhTien, row, 4);

    }//GEN-LAST:event_txtSLKeyReleased

    private void tblHDCTComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblHDCTComponentAdded

    }//GEN-LAST:event_tblHDCTComponentAdded

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        removeDetails();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblHDCTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHDCTKeyTyped
        // TODO add your handling code here:
        updateHoaDon();
    }//GEN-LAST:event_tblHDCTKeyTyped

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        updateDetails();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed

        List<Object[]> list = hdDAO.getMaxID();

                for (Object[] row : list) {
                    maxID = (int) row[0];
                }
        System.out.println("Xuất HD: "+(maxID+1));
        
        paymentInCash(maxID + 1);  
        
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnChonKHTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonKHTTActionPerformed
        selectCustomer();
    }//GEN-LAST:event_btnChonKHTTActionPerformed

    private void txtMaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHDActionPerformed
        // TODO add your handling code here:
        updateHoaDon();
    }//GEN-LAST:event_txtMaHDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThemHoaDon dialog = new ThemHoaDon(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnChonKHTT;
    private javax.swing.JButton btnChonSP;
    private javax.swing.JButton btnQuetMaSP;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnXoa;
    public static com.toedter.calendar.JDateChooser jDateNL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblTimer;
    public static javax.swing.JTable tblHDCT;
    public static javax.swing.JTextField txtDonGia;
    public static javax.swing.JTextField txtKHTT;
    public static javax.swing.JTextField txtKhuyenMai;
    public static javax.swing.JTextField txtMaHD;
    public static javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNhanVien;
    public static javax.swing.JTextField txtSL;
    public static javax.swing.JTextField txtTenSP;
    public static javax.swing.JTextField txtTien;
    public static javax.swing.JTextField txtTongCong;
    public static javax.swing.JTextField txtVAT;
    // End of variables declaration//GEN-END:variables

//    QuanLyHoaDon qlhd = new QuanLyHoaDon(null, true);
    int maxID = 0;
    private void init() {
        setLocationRelativeTo(null);
        txtNhanVien.setText(Auth.user.getHoTen());
        jDateNL.setDate(XDate.now());
        List<Object[]> list = hdDAO.getMaxID();
        
        for (Object[] row : list) {
            maxID = (int) row[0];
        }
        //Gán cho textField
        ThemHoaDon.txtMaHD.setText((maxID + 1) + "");
//        txtNhanVien.setText(Auth.user.getHoTen());
//        jDateNL.setDate(XDate.now());

    }

    SanPhamDAO spDAO = new SanPhamDAO();
    static DefaultTableModel model;
    HoaDonDAO hdDAO = new HoaDonDAO();
    Vector v = new Vector();
    int i = 1;
    int index = 0;
    double thanhhTien = 0;
    double tongCong = 0;
    double tien = 0;
    double khuyenMai = 0;
    double VAT = 0;
    int diemThuong = 0;
    double donGia = 0;

//    int[] tempArr = null;
    private void ScanProduct() {
        model = (DefaultTableModel) tblHDCT.getModel();

        QRCode Barcode = new QRCode();
        Barcode.setVisible(true);

        Thread thread = new Thread() {
            @Override
            public void run() {
                while (true) {
                    try {
                        SanPham sp = spDAO.ScanBarcode(QRCode.result_field.getText());

                        if (sp != null) {
                            //ADD vao Table
                            v = new Vector();
                            v.add(Integer.parseInt(txtMaHD.getText()));
                            v.add(sp.getMaSP());
                            v.add(sp.getTenSP());
                            v.add(sp.getGiaBan());
                            v.add(i);
                            v.add(sp.getGiaBan() * i);
                            model.addRow(v);

                            tblHDCT.setRowSelectionInterval(index, index);
                            txtMaSP.setText(sp.getMaSP() + "");
                            txtTenSP.setText(sp.getTenSP());
                            txtSL.setText(i + "");
                            txtSL.requestFocus();

                            txtDonGia.setText(sp.getGiaBan() + "");
//                                System.out.println(QRCode.result_field.getText());

//                              ThanhTien
                            donGia = sp.getGiaBan();
//                                tien += donGia*i;
//                                VAT = sp.getVAT(); 
                            if (tien > 500000) {
                                khuyenMai = (tien * 5) / 100;
                                diemThuong = (int)(tien*2)/100000;
                            }
                            tongCong = (tien - khuyenMai);

                            //SET
                            txtDonGia.setText(donGia + "");
                            txtTien.setText(sp.getGiaBan() * i + "");
                            txtKhuyenMai.setText(khuyenMai + "");
                            txtTongCong.setText(tongCong + "");
//                                txtVAT.setText(VAT+"");
                            sleep(2000);
                            index++;
                            QRCode.result_field.setText("");

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    if(!Barcode.isVisible()){
                        btnQuetMaSP.setEnabled(true);
                        QRCode.webcam.close();
                    }

                }
            }

        };
        thread.start();
    }

    private void chooseProduct() {
        ChonSanPham chsp = new ChonSanPham(this, true);
        chsp.setVisible(true);

    }

    KhachHangDAO khDAO = new KhachHangDAO();
//    int diemThuong = 0;
    void updateDetails() {
        tien = 0;
        int soLuong = 0;
        khuyenMai = 0;
        tongCong = 0;
        
        for (int j = 0; j < tblHDCT.getRowCount(); j++) {
            donGia = (double) tblHDCT.getValueAt(j, 3);
            soLuong = (int) tblHDCT.getValueAt(j, 4);
            tblHDCT.setValueAt(donGia * soLuong, j, 5);
            tien += donGia * soLuong;
        }

        if (tien > 500000) {
            khuyenMai = (tien * 5) / 100;
        }

        if (!txtVAT.getText().equals("")) {
            tien *= VAT;
        }

        try {
            KhacHangTT kh = null;
            if (khDAO.selectById(Integer.parseInt(txtKHTT.getText())) != null) {
                kh = khDAO.selectById(Integer.parseInt(txtKHTT.getText()));

                if (kh.getDiemThuong() > 50) {
                    khuyenMai += (tien * 2) / 100;
                    diemThuong = (int)(tien*2)/100000;
                }
//                diemThuong = (int)(tien*0.5)/100;
//                kh.setDiemThuong(kh.getDiemThuong()+diemThuong);
//                khDAO.update(kh);

            }
        } catch (Exception e) {
            e.printStackTrace();
//            khuyenMai =0;
//            diemThuong =0;
        }

        tongCong = tien - khuyenMai;
        System.out.println(tongCong);
        //SET TEXTFIELD
        txtTongCong.setText(XConvert.formatMoney(tongCong)+ "");
        System.out.println(tongCong);
        txtTien.setText(XConvert.formatMoney(tien) + "");
        System.out.println(tien);
        txtKhuyenMai.setText(XConvert.formatMoney(khuyenMai) + "");
        System.out.println("thành công");
    }

    private void removeDetails() {
        model = (DefaultTableModel) tblHDCT.getModel();
        row = tblHDCT.getSelectedRow();
        if (MsgBox.confirm(this, "Bạn muốn xoá sản phẩm này?")) {
            model.removeRow(row);
            updateDetails();
        }
    }
    
   
      
    @SuppressWarnings("unchecked")
    private void paymentInCash(int maHD) {
        
        try {
            
            
//            JasperDesign jd = JRXmlLoader.load("src/poly/com/ui/report1.jrxml");
//            String records ="SELECT * FROM HOADON";
//            JRDesignQuery updateQuery = new JRDesignQuery();
//            
//            jd.setQuery(updateQuery);
            insertHoaDon();
            
            Hashtable map = new Hashtable();
            //JasperReport
            JasperReport jr = JasperCompileManager.compileReport("src/poly/com/ui/CashBill.jrxml");
            map.put("maHD", maHD);
            
            //JasperPrint
            @SuppressWarnings("unchecked")
            JasperPrint jp = JasperFillManager.fillReport(jr, map, XJdbc.conn);
            //JasperView
            JasperViewer.viewReport(jp,false);
            //JasperExport
            JasperExportManager.exportReportToPdfFile(jp, "test.pdf");
        } catch (JRException ex) {

            ex.printStackTrace();
        }
    }

    private void selectCustomer() {
        new ChonKhachHang(null, true).setVisible(true);
    }
    
    private void setOclock() {
        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date now = new Date();
                SimpleDateFormat fomarter = new SimpleDateFormat("hh:mm:ss a");
                String text = fomarter.format(now);
                lblTimer.setText(text);
            }
        }).start();
    }
    
    
    private void insertHoaDon(){
        //Hoá đơn 
//        HoaDon hd = new HoaDon(); 
//        hd.setThoiDiemLap(XDate.convertDate(jDateNL.getDate()));
//        hd.setTongTienTra(XConvert.convertToDouble(txtTongCong.getText()));
//        hd.setMucGiam(XConvert.convertToDouble(txtKhuyenMai.getText()));
//        hd.setDiemThuong(diemThuong);
//        hd.setMaNV(Auth.user.getMaNV());
////        String x = "";
//        txtKHTT.setText("1");
////        if(txtKHTT.getText().equals("")){
////           if(Integer.parseInt(txtKHTT.getText()) != null){ 
////            hd.setMaKH(Integer.parseInt(txtKHTT.getText("1")));
//                hd.setMaKH(1);
////        txtKHTT.setText("0");
////            Integer.parseInt(txtKHTT.setText("1"));
////        }
////        else    
//        if(Integer.parseInt(txtKHTT.getText()) != 1)
//        {
//            hd.setMaKH(Integer.parseInt(txtKHTT.getText()));
//        }
//        hd.setGioMua(lblTimer.getText());
//        try {
//            hdDAO.insert(hd);
//        } catch (Exception e) {
//            e.printStackTrace();
//            MsgBox.alert(this, "INSERT HOADON không thành công");
//        }
        
                //Hoá đơn 
        HoaDon hd = new HoaDon(); 
        hd.setThoiDiemLap(XDate.convertDate(jDateNL.getDate()));
        hd.setTongTienTra(XConvert.convertToDouble(txtTongCong.getText()));
        hd.setMucGiam(XConvert.convertToDouble(txtKhuyenMai.getText()));
        hd.setDiemThuong(diemThuong);
        hd.setMaNV(Auth.user.getMaNV());
        if(txtKHTT.getText().equals("")){
            hd.setMaKH(1);
        }else{
            try {
                hd.setMaKH(Integer.parseInt(txtKHTT.getText()));
            } catch (Exception e) {
                System.out.println("chưa chọn khách hàng");
            }
            
        }
        hd.setGioMua(lblTimer.getText());
        try {
            hdDAO.insert(hd);
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "INSERT HOADON không thành công");
        }
        // điểm thưởng khách hàng
        try {
        KhacHangTT kh = khDAO.selectById(Integer.parseInt(txtKHTT.getText()));
//          KhacHangTT kh = khDAO.selectById(hd.setMaKH(Integer.valueOf(txtKHTT)))
        kh.setDiemThuong(kh.getDiemThuong()+diemThuong);
        try {
            khDAO.update(kh);
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "UPDATE KHACHANG không thành công");
        }
        } catch (Exception e) {
            MsgBox.alert(this, "Khách hàng chưa đăng ký KHTT");
        }
        
        // Hoá đơn chi tiết
        List<Object[]> list = hdDAO.getMaxID();
        
        for (Object[] row : list) {
            maxID = (int) row[0];
            System.out.println(maxID);;
        }
        try {
            hd.setMaHD(maxID);
            for(int i = 0;i<tblHDCT.getRowCount();i++){
                int maSP = (int) tblHDCT.getValueAt(i, 1);
                int soLuong =(int) tblHDCT.getValueAt(i, 4);
                hd.setMaSP(maSP);
                hd.setSoLuong(soLuong);
                System.out.println("HDCT : \n"
                        + "MaHD: "+maxID
                        + "MaSP: "+maSP
                        + "SoLuong: "+soLuong);
                hdDAO.insertHDCT(hd);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "INSERT HOADONCHITIET không thành công");
        }
        
        
    }
    
    private void updateHoaDon() {
        HoaDon hd = new HoaDon(); 
        hd.setMaHD(Integer.parseInt(txtMaHD.getText()));
        hd.setThoiDiemLap(XDate.convertDate(jDateNL.getDate()));
        hd.setTongTienTra(XConvert.convertToDouble(txtTongCong.getText()));
        hd.setMucGiam(XConvert.convertToDouble(txtKhuyenMai.getText()));
        hd.setDiemThuong(diemThuong);
        hd.setMaNV(Auth.user.getMaNV());
        if(txtKHTT.getText().equals("")){
            hd.setMaKH(1);
        }else{
            try {
                hd.setMaKH(Integer.parseInt(txtKHTT.getText()));
            } catch (Exception e) {
                System.out.println("chưa chọn khách hàng");
            }
            
        }
        hd.setGioMua(lblTimer.getText());
        
        try {
            hdDAO.update(hd);
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "UPDATE HOADON không thành công");
        }
        
        // điểm thưởng khách hàng
//        try {
//            KhacHangTT kh = khDAO.selectById(Integer.parseInt(txtKHTT.getText()));
//            kh.setDiemThuong(kh.getDiemThuong()+diemThuong);
//            try {
//                khDAO.update(kh);
//            } catch (Exception e) {
//                e.printStackTrace();
//                MsgBox.alert(this, "UPDATE KHACHHANG không thành công");
//            }
//        } catch (Exception e) {
//            MsgBox.alert(this, "Khách hàng chưa đăng ký KHTT");
//        }
        
        // Hoá đơn chi tiết
        
//        try {
//            hd.setMaHD(Integer.parseInt(txtMaHD.getText()));
//            for(int i = 0;i<tblHDCT.getRowCount();i++){
//                int maSP = (int) tblHDCT.getValueAt(i, 1);
//                int soLuong =(int) tblHDCT.getValueAt(i, 4);
//                hd.setMaSP(maSP);
//                hd.setSoLuong(soLuong);
//                System.out.println("HDCT : \n"
//                        + "MaHD: "+txtMaHD.getText()
//                        + "MaSP: "+maSP
//                        + "SoLuong: "+soLuong);
////                hdDAO.insertHDCT(hd);
//                hdDAO.updateHDCT(hd);
//            }
//            MsgBox.alert(this, "UPDATE HOADONCHITIET Thành công");
//        } catch (Exception e) {
//            e.printStackTrace();
//            MsgBox.alert(this, "INSERT HOADONCHITIET không thành công");
//        }
    }

}
